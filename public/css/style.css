body, html {
    padding: 0;
    margin: 0;
}

#mosaic_editor, #mosaic_libman {
    font: 400 16px/18px 'Roboto', sans-serif;
    color: #222222A5;
}

input, textarea {
    background: #00000008 0% 0% no-repeat padding-box;
    border: 2px solid #2222220D;
    border-radius: 5px;
    padding: 5px 10px;
}
/* library manager */

#mosaic_libman h1 {
    font: 500 25px/25px 'Roboto', sans-serif;
    letter-spacing: 0.85px;
    color: #222222;
    text-transform: uppercase;
}

#mosaic_libman h2 {
    font: 500 25px/25px 'Roboto', sans-serif;
    letter-spacing: 0.72px;
    color: #222222;
}

#mosaic_libman h3 {
    font: 500 20px/25px 'Roboto', sans-serif;
    letter-spacing: 0.72px;
    color: #222222;
}

#mosaic_libman button.plus {
    font: 500 25px/25px 'Roboto', sans-serif;
    letter-spacing: 0.85px;
    color: #222222;
    text-transform: uppercase;
    padding: 5px 12px;
}

#mosaic_libman .libhead {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: baseline;
}

#mosaic_libman .addbuttons {
    display: flex;
    flex-direction: row;
    justify-content: right;
    gap: 20px;
    padding: 20px 20px;
    border-bottom: 1px solid #e7e7e7;
}

#mosaic_libman .schsel h2 {
    padding: 0 20px;
}

#mosaic_libman .schsel .schematics {
    padding: 0 20px;
}


#mosaic_libman button, #mosaic_libman .buttongroup {
    background: #f8f8f8 0% 0% no-repeat padding-box;
    box-shadow: 0px 1px 4px #00000033;
    border-radius: 7px;
    border: none;
    padding: 10px 15px;
}

#mosaic_libman button:active {
    box-shadow: 0px 0px 4px hsla(0, 0%, 0%, 0.2);
}
#mosaic_libman button.primary,
#mosaic_libman .buttongroup.primary {
    background-color: #0E1A32;
    color: white;
}
#mosaic_libman .buttongroup.primary > button,
#mosaic_libman .buttongroup summary::after {
    color: white;
    border-color: white;
}
#mosaic_libman .buttongroup.primary > button:disabled {
    color: grey;
}

#mosaic_libman .buttongroup {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 0;
    position: relative;
}

#mosaic_libman .buttongroup summary {
    padding: 10px 15px;
    border-left: 1px solid rgb(224, 224, 224);
}

#mosaic_libman .buttongroup summary::after {
    transform: rotate(45deg);
    top:-5px;
    left:0px;
}

#mosaic_libman .buttongroup details > button {
    position: absolute;
    left: 0;
    bottom: -100%;
    width: 100%;
}

#mosaic_libman .buttongroup > button {
    background: none;
    box-shadow: none;
}

#mosaic_libman .libraries {
    grid-area: libraries;
    display: flex;
    flex-direction: column;
    border-right: 1px solid #e7e7e7;
    overflow: hidden;
}
#mosaic_libman .libraries > *{
    padding: 1em;
}
#mosaic_libman .libraries .dbsel {
    flex-grow: 1;
}
#mosaic_libman .schematics {
    grid-area: schematics;
    display: flex;
    flex-direction: column;
}
#mosaic_libman .cellsel {
    flex-grow: 1;
    overflow: auto;
}
#mosaic_libman .cellsel details {
    margin-bottom: 1em;
}

#mosaic_libman .dbprops {
    padding-top: 0;
    background-color: #00000007;
}

#mosaic_libman .proppane {
  grid-area: properties;
  border-left: 1px solid #e7e7e7;
  padding: 20px;
}

#mosaic_libman .properties {
    display: grid;
    grid-template-columns: [labels] auto [controls] auto;
    grid-auto-flow: row;
    row-gap: 1em;
    align-items: center;
}

#mosaic_libman .properties label {
  grid-column: labels;
  grid-row: auto;
}

#mosaic_libman .properties input {
    grid-column: controls;
    grid-row: auto;
    box-sizing: border-box;
    width: 100%;
}

#mosaic_libman input[type=radio] {
    display: none;
}
#mosaic_libman input[type=radio] + label {
    display: block;
    padding: 10px 15px;
    margin: 5px 0 0 5px;
}
#mosaic_libman input[type=radio]:checked + label {
    background-color: rgba(0, 0, 0, 0.041);
    border-radius: 7px;
}

#mosaic_libman details .detailbody {
    max-height: 0px;
    transition: max-height 1s;
    overflow: hidden;
}
#mosaic_libman details[open] .detailbody {
    max-height: 10000px;
}
#mosaic_libman details summary {
    list-style-type: none;
}
#mosaic_libman .libraries details summary {
    padding: 10px 15px;
    border-radius: 7px;
}
#mosaic_libman details[open] summary {
    background: #0E1A32 0% 0% no-repeat padding-box;
    color:white;
}

#mosaic_libman details summary::after {
    content: "";
    border: solid black;
    border-width: 0 1px 1px 0;
    padding: 3px;
    transform: rotate(-45deg);
    float: right;
    position: relative;
    top:4px;
    left:-4px;
    transition: transform 100ms;
}
#mosaic_libman details[open] summary::after {
    transform: rotate(45deg);
    border: solid white;
    border-width: 0 1px 1px 0;
}

#mosaic_libman {
    display: grid;
    grid-template-areas:
    'libraries schematics properties';
    grid-template-rows: 1fr;
    grid-template-columns: 1fr 2fr 2fr;
}

/* editor */
#mosaic_editor * {
  margin: 0;
  padding: 0;
}

#mosaic_editor h1, #mosaic_editor h2, #mosaic_editor h3, #mosaic_editor h4, #mosaic_editor h5, #mosaic_editor h6 {
  font-size: 1.1em;
  margin: 0.5em 0;
}

#mosaic_editor, #mosaic_app, #mosaic_libman {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

#mosaic_app {
  display: grid;
  grid-template-columns: 200px 1fr;
  grid-template-rows: 2em 1fr;
}

#mosaic_menu {
  grid-row: 1;
  grid-column: 1 / 3;
  background-color: rgb(226, 226, 226);
  box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.2);
  z-index: 1;
  display: flex;
  justify-content: flex-end;
}

#mosaic_menu a,
#mosaic_menu label,
#mosaic_menu span.sep {
  box-sizing: border-box;
  height: 100%;
  padding: 0.5em;
}

#mosaic_menu span.sep {
  border-right: 1px solid black;
  padding: 0;
  margin: 0 0.5em;
}

#mosaic_menu a:hover,
#mosaic_menu input[type=radio]:checked + label {
  background-color: gray;
}

#mosaic_menu input {
  display: none;
}

#mosaic_sidebar {
  grid-row: 2;
  grid-column: 1;
  background-color: rgb(247, 247, 247);
  padding: 0.5em;
  box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.2);
  overflow:auto;
}

#mosaic_editor .properties {
  display: grid;
  grid-template-columns: [labels] auto [controls] 1fr;
  grid-auto-flow: row;
  grid-gap: .8em;
}
#mosaic_editor .properties label {
  grid-column: labels;
  grid-row: auto;
}

#mosaic_editor .properties input {
    grid-column: controls;
    grid-row: auto;
    box-sizing: border-box;
    width: 100%;
}

#mosaic_canvas {
  grid-row: 2;
  grid-column: 2;
}

#mosaic_canvas.pan {
    cursor: grab;
}

#mosaic_canvas.eraser .wire:hover,
#mosaic_canvas.eraser .device.port:hover,
#mosaic_canvas.eraser .device:hover .tetris {
    opacity: 0.5;
}


#mosaic_editor svg {
  overflow: hidden;
  stroke-linecap: round;
}

svg.device {
  overflow: visible !important;
}

svg.device g.transform {
  transform-box: border-box;
  transform-origin: center;
}

line.wirebb {
  stroke: transparent;
  stroke-width: 25px;
  fill: none;
}

line.grid {
  stroke: lightgray;
  stroke-width: 0.5px;
  fill: none;
}

/* tetris theme */
.tetris rect.tetris {
  fill: rgb(238, 238, 238);
}

.tetris svg.device.selected rect.tetris,
.tetris svg.port.selected polyline,
.tetris rect.tetris.selected {
  fill: rgb(229, 216, 243) !important;
  /* stroke: rgb(90, 90, 90) !important; */
}

.tetris svg.device.nmos rect.tetris,
.tetris svg.device.npn rect.tetris {
  fill: rgb(216, 236, 243);
}

.tetris svg.device.pmos rect.tetris,
.tetris svg.device.pnp rect.tetris {
  fill: rgb(243, 231, 216);
}

.tetris svg.device.capacitor rect.tetris,
.tetris svg.device.inductor rect.tetris,
.tetris svg.device.resistor rect.tetris,
.tetris svg.device.diode rect.tetris {
  fill: rgb(216, 243, 226);
}

.tetris svg.device.vsource rect.tetris,
.tetris svg.device.isource rect.tetris,
.tetris svg.device.port polyline {
  fill: rgb(243, 243, 216);
}

.tetris circle.port {
  fill: rgb(145, 0, 0);
  stroke: rgb(53, 0, 0);
}

.tetris svg.device circle.port {
  display: none;
}

.tetris svg.device.selected circle.port {
  display: inherit;
}


.tetris svg.device polyline,
.tetris svg.device circle.outline,
.tetris svg.device rect.outline,
.tetris svg.device path {
  stroke: black;
  stroke-width: 2px;
  fill: none;
}

.tetris line.wire {
  stroke: black;
  stroke-width: 2px;
  fill: none;
}
.tetris circle.wire {
  fill: black;
}

/* eyesore theme */

.eyesore svg#mosaic_canvas {
  shape-rendering: crispEdges;
  background-color: black;
}

.eyesore rect.tetris {
  fill: transparent;
}

.eyesore circle.port {
  fill: red;
}

.eyesore text {
  fill: red;
}

.eyesore svg.device polyline,
.eyesore svg.device path,
.eyesore svg.device circle.outline,
.eyesore svg.device rect.outline,
.eyesore svg.device polygon {
  stroke: #00cc66;
  stroke-width: 1px;
  fill: none;
  vector-effect: non-scaling-stroke;
}

.eyesore svg.device text {
  stroke: #00cc66;
  /* stroke-width: 1px; */
  fill: #00cc66;
  vector-effect: non-scaling-stroke;
}

.eyesore line.wire {
  stroke: #39bfff;
  stroke-width: 1px;
  fill: none;
  vector-effect: non-scaling-stroke;
}
.eyesore circle.wire {
  fill: #39bfff;
}